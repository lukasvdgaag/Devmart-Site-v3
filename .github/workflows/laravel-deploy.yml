name: Deploy Application

on:
  push:
    branches: [ main ]
    
jobs:
  create-deployment-artifacts:
    name: Create deployment artifacts
    runs-on: ubuntu-20.04
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Compile CSS and JavaScript
      run: |
        npm install
        npx tailwindcss -i resources/css/input.css -o resources/css/output.css --minify
        npm run build
      
    - name: Configure PHP 8.1
      uses: shivammathur/setup-php@master
      with:
        php-version: 8.1
        extensions: mbstring, ctype, fileinfo, openssl, PDO, bcmath, json, tokenizer, xml
    
    - name: Composer install
      run: |
        composer install --no-dev --no-interaction --prefer-dist
        php artisan config:cache
    
    - name: Create deployment artifact
      env:
        GITHUB_SHA: ${{ github.sha }}
      run: tar -czf "${GITHUB_SHA}".tar.gz --exclude=*.git --exclude=node_modules --exclude=tests *
      
    - name: Store artifact for distribution
      uses: actions/upload-artifact@v3
      with:
        name: app-build
        path: ${{ github.sha }}.tar.gz
        
  prepare-release-on-server:
    name: Prepare release
    runs-on: ubuntu-20.04
    needs: create-deployment-artifacts
    environment: production
    
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-build
      
      - name: Check secrets
        run: echo "Secret is ${{ secrets.SERVER_SSH_KEY }}"
      
      - name: Upload
        uses: appleboy/scp-action@master   
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          source: ${{ github.sha }}.tar.gz
          target: ${{ secrets.SERVER_PATH }}/artifacts
          
      - name: Extract archive and create directories
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          envs: GITHUB_SHA
          script: |
            mkdir -p "${{ secrets.SERVER_PATH }}/releases/${GITHUB_SHA}"
            tar xzf ${{ secrets.SERVER_PATH }}/artifacts/${GITHUB_SHA}.tar.gz -C "${{ secrets.SERVER_PATH }}/releases/${GITHUB_SHA}"
            rm -rf ${{ secrets.SERVER_PATH }}/releases/${GITHUB_SHA}/storage
            
            mkdir -p ${{ secrets.SERVER_PATH }}/storage/{app,public,framework,logs}
            mkdir -p ${{ secrets.SERVER_PATH }}/storage/framework/{cache,sessions,testing,views}
            chmod -R 0777 ${{ secrets.SERVER_PATH }}/storage
            
  activate-release:
    name: Activate release
    runs-on: ubuntu-20.04
    needs: [ create-deployment-artifacts, prepare-release-on-server ]
    environment: production
    
    steps:
      - name: Activate release
        uses: appleboy/ssh-action@master
        env:
          GITHUB_SHA: ${{ github.sha }}
          RELEASE_PATH: ${{ secrets.SERVER_PATH }}/releases/${{ github.sha }}
          ACTIVE_RELEASE_PATH: ${{ secrets.SERVER_PATH }}/current
          STORAGE_PATH: ${{ secrets.SERVER_PATH }}/storage
          BASE_PATH: ${{ secrets.SERVER_PATH }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          envs: GITHUB_SHA,RELEASE_PATH,ACTIVE_RELEASE_PATH,STORAGE_PATH,BASE_PATH,ENV_PATH
          script: |
            ln -s -f $BASE_PATH/.env $RELEASE_PATH
            ln -s -f $STORAGE_PATH $RELEASE_PATH
            ln -s -n -f $RELEASE_PATH $ACTIVE_RELEASE_PATH
            sudo systemctl reload php8.1-fpm
          
  clean-up:
    name: Clean up
    runs-on: ubuntu-20.04
    needs: [ create-deployment-artifacts, prepare-release-on-server, activate-release ]
    environment: production
    
    steps:
      - name: Run after 
        uses: appleboy/ssh-actioN@master
        env:
          RELEASE_PATH: ${{ secrets.SERVER_PATH }}/releases
          ARTIFACTS_PATH: ${{ secrets.SERVER_PATH }}/artifacts
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          envs: RELEASE_PATH
          script: |
            cd $RELEASE_PATH && ls -t -1 | tail -n +6 | xargs rm -rf
            cd $ARTIFACTS_PATH && ls -t -1 | tail -n +6 | xargs rm -rf
          
          
